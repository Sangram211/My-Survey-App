const passport = require('passport');
const GoogleStrategy = require('passport-google-oauth20').Strategy;
const keys = require('../config/key');
const mongoose = require('mongoose');

const User = mongoose.model('users');

passport.serializeUser((user, done) => { // to set cookie
    done(null, user.id); // user.id is id generated by mongo for user 
});

passport.deserializeUser((id, done) => {
	User.findById(id).then(user => {
		done(null, user) ;
	});
});

passport.use(new GoogleStrategy({
        clientID: keys.googleClientID,
        clientSecret: keys.googleClientSecret,
        callbackURL: '/auth/google/callback'
    },
    (accesToken, refreshToken, profile, done) => {
        // if id exitsts in db dont create a user else create
        User.findOne({ googleId: profile.id }).then(existingUser => { //findone returns a promice so store in existinguser
            if (existingUser) {
                // no need to create a user
                done(null, existinguser);
            } else {
                new User({
                    'googleId': profile.id,
                    'name': profile.displayName
                }).save().then(User => done(null, User));
            }
        });

    }));